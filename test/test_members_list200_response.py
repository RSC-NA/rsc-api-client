# coding: utf-8

"""
    RSC API Docs

    RSC API Documentation

    The version of the OpenAPI document: v1
    Contact: contact@snippets.local
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from rscapi.models.members_list200_response import MembersList200Response  # noqa: E501

class TestMembersList200Response(unittest.TestCase):
    """MembersList200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MembersList200Response:
        """Test MembersList200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MembersList200Response`
        """
        model = MembersList200Response()  # noqa: E501
        if include_optional:
            return MembersList200Response(
                count = 56,
                next = '',
                previous = '',
                results = [
                    rscapi.models.member.Member(
                        username = '0', 
                        rsc_id = '', 
                        elevated_roles = [
                            rscapi.models.elevated_role.ElevatedRole(
                                league = rscapi.models.league.League(
                                    id = 56, 
                                    name = '0', 
                                    guild_id = 56, 
                                    league_data = rscapi.models.league_data.LeagueData(
                                        max_num_players = -2147483648, 
                                        game_mode = '0', 
                                        match_format = -2147483648, ), ), 
                                position = '0', 
                                gm = True, 
                                agm = True, 
                                arbiter = True, 
                                project_role = '0', )
                            ], 
                        player_leagues = [
                            rscapi.models.league_player.LeaguePlayer(
                                id = 56, 
                                league = rscapi.models.league.League(
                                    id = 56, 
                                    name = '0', 
                                    guild_id = 56, 
                                    league_data = rscapi.models.league_data.LeagueData(
                                        max_num_players = -2147483648, 
                                        game_mode = '0', 
                                        match_format = -2147483648, ), ), 
                                status = 'DE', 
                                season = 56, 
                                captain = True, 
                                base_mmr = 56, 
                                current_mmr = 56, 
                                contract_length = 56, 
                                team = rscapi.models.player_team.PlayerTeam(
                                    name = '0', 
                                    tier = '0', ), 
                                last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                previous_teams = [
                                    rscapi.models.previous_team.PreviousTeam(
                                        sign_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        release_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        player = '0', )
                                    ], 
                                player = rscapi.models.league_player_member.LeaguePlayerMember(
                                    name = '0', 
                                    rsc_id = '', ), )
                            ], 
                        rsc_name = '0', 
                        discord_id = -9223372036854775808, )
                    ]
            )
        else:
            return MembersList200Response(
                count = 56,
                results = [
                    rscapi.models.member.Member(
                        username = '0', 
                        rsc_id = '', 
                        elevated_roles = [
                            rscapi.models.elevated_role.ElevatedRole(
                                league = rscapi.models.league.League(
                                    id = 56, 
                                    name = '0', 
                                    guild_id = 56, 
                                    league_data = rscapi.models.league_data.LeagueData(
                                        max_num_players = -2147483648, 
                                        game_mode = '0', 
                                        match_format = -2147483648, ), ), 
                                position = '0', 
                                gm = True, 
                                agm = True, 
                                arbiter = True, 
                                project_role = '0', )
                            ], 
                        player_leagues = [
                            rscapi.models.league_player.LeaguePlayer(
                                id = 56, 
                                league = rscapi.models.league.League(
                                    id = 56, 
                                    name = '0', 
                                    guild_id = 56, 
                                    league_data = rscapi.models.league_data.LeagueData(
                                        max_num_players = -2147483648, 
                                        game_mode = '0', 
                                        match_format = -2147483648, ), ), 
                                status = 'DE', 
                                season = 56, 
                                captain = True, 
                                base_mmr = 56, 
                                current_mmr = 56, 
                                contract_length = 56, 
                                team = rscapi.models.player_team.PlayerTeam(
                                    name = '0', 
                                    tier = '0', ), 
                                last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                previous_teams = [
                                    rscapi.models.previous_team.PreviousTeam(
                                        sign_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        release_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        player = '0', )
                                    ], 
                                player = rscapi.models.league_player_member.LeaguePlayerMember(
                                    name = '0', 
                                    rsc_id = '', ), )
                            ], 
                        rsc_name = '0', 
                        discord_id = -9223372036854775808, )
                    ],
        )
        """

    def testMembersList200Response(self):
        """Test MembersList200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
