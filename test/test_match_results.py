# coding: utf-8

"""
    RSC API Docs

    RSC API Documentation

    The version of the OpenAPI document: v1
    Contact: contact@snippets.local
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from rscapi.models.match_results import MatchResults  # noqa: E501

class TestMatchResults(unittest.TestCase):
    """MatchResults unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MatchResults:
        """Test MatchResults
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MatchResults`
        """
        model = MatchResults()  # noqa: E501
        if include_optional:
            return MatchResults(
                home_wins = 56,
                away_wins = 56,
                games = [
                    rscapi.models.game.Game(
                        winner = rscapi.models.team.Team(
                            id = 56, 
                            name = '0', 
                            franchise = '0', 
                            tier = '0', 
                            players = [
                                rscapi.models.player.Player(
                                    id = 56, 
                                    name = '0', 
                                    status = '0', 
                                    captain = True, 
                                    base_mmr = 56, 
                                    current_mmr = 56, 
                                    last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    discord_id = 56, )
                                ], 
                            latest_season = 56, ), 
                        forfeit = True, 
                        replay_id = '', 
                        raw_stats = rscapi.models.raw_stats.Raw stats(), )
                    ],
                manual = True,
                ballchasing_group = '0'
            )
        else:
            return MatchResults(
                games = [
                    rscapi.models.game.Game(
                        winner = rscapi.models.team.Team(
                            id = 56, 
                            name = '0', 
                            franchise = '0', 
                            tier = '0', 
                            players = [
                                rscapi.models.player.Player(
                                    id = 56, 
                                    name = '0', 
                                    status = '0', 
                                    captain = True, 
                                    base_mmr = 56, 
                                    current_mmr = 56, 
                                    last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    discord_id = 56, )
                                ], 
                            latest_season = 56, ), 
                        forfeit = True, 
                        replay_id = '', 
                        raw_stats = rscapi.models.raw_stats.Raw stats(), )
                    ],
        )
        """

    def testMatchResults(self):
        """Test MatchResults"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
